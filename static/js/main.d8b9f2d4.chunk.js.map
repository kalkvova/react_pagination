{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","numberPages","Math","ceil","isLastPage","isFirstPage","pagesArray","className","cn","disabled","href","onClick","event","preventDefault","prevPage","map","page","active","handleClick","nextPage","items","App","useState","setCurrentPage","itemsPerPage","setItemsPerPage","maxPerPage","firstItem","itemToShow","slice","defaultValue","id","onChange","target","value","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAGMC,EAAcC,KAAKC,KAAKN,EAAQC,GAChCM,EAAaL,IAAgBE,EAC7BI,EAHY,IAGEN,EACdO,EAAahB,EAJD,EAIuBW,GAoBzC,OACE,qBAAIM,UAAU,aAAd,UACE,oBACEA,UAAWC,IAAG,YAAa,CACzBC,SAAUJ,IAFd,SAKE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EACfM,QAAS,SAACC,IAnBD,SAACA,GACXP,IACHO,EAAMC,iBACNb,EAAaD,EAAc,IAiBrBe,CAASF,IANb,oBAaDN,EAAWS,KAAI,SAAAC,GACd,OACE,oBACET,UAAWC,IAAG,YAAa,CACzBS,OAAQlB,IAAgBiB,IAF5B,SAME,mBACE,UAAQ,WACRT,UAAU,YACVG,KAAI,UAAKM,GACTL,QAAS,SAACC,IAnDF,SAACA,EAAsCI,GACzDJ,EAAMC,iBACNb,EAAagB,GAkDDE,CAAYN,EAAOI,IALvB,SAQGA,KAVEA,MAgBX,oBAAIT,UAAWC,IAAG,YAAa,CAC7BC,SAAUL,IADZ,SAIE,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBAAeN,EACfO,QAAS,SAACC,IAjED,SAACA,GACXR,IACHQ,EAAMC,iBACNb,EAAaD,EAAc,IA+DrBoB,CAASP,IANb,wBChFFQ,EAAQ9B,EAAW,EAAG,IACzByB,KAAI,SAAArB,GAAC,qBAAYA,MAEP2B,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOvB,EAAP,KAAoBwB,EAApB,KACA,EAAwCD,mBAAS,GAAjD,mBAAOE,EAAP,KAAqBC,EAArB,KACMC,EAAa3B,EAAcyB,EARb,MAUfzB,EAAcyB,EACbG,EAAYD,GACfA,GAAe3B,EAAc,GAAKyB,GAC/BI,EAAaR,EAAMS,MAAMF,EAAWD,GAM1C,OACE,sBAAKnB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiC4B,EAAY,EAD7C,cACoDD,EADpD,eAvBgB,GAuBhB,OAIA,sBAAKnB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACEuB,aAAcN,EACd,UAAQ,kBACRO,GAAG,kBACHxB,UAAU,eACVyB,SApBW,SAACpB,GACpBa,GAAiBb,EAAMqB,OAAOC,OAC9BX,EAAe,IAaT,UAOE,wBAAQW,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOC,QAAQ,kBAAkB5B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAjDc,GAkDdC,QAAS0B,EACTzB,YAAaA,EACbC,aAAcuB,IAGhB,6BACGK,EAAWb,KAAI,SAAAqB,GAAI,OAClB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC3DlCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d8b9f2d4.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const firstPage = 1;\n  const numberPages = Math.ceil(total / perPage);\n  const isLastPage = currentPage === numberPages;\n  const isFirstPage = currentPage === firstPage;\n  const pagesArray = getNumbers(firstPage, numberPages);\n  const handleClick = (event: React.MouseEvent<HTMLElement>, page: number) => {\n    event.preventDefault();\n    onPageChange(page);\n  };\n\n  const nextPage = (event: React.MouseEvent<HTMLElement>) => {\n    if (!isLastPage) {\n      event.preventDefault();\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  const prevPage = (event: React.MouseEvent<HTMLElement>) => {\n    if (!isFirstPage) {\n      event.preventDefault();\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={cn('page-item', {\n          disabled: isFirstPage,\n        })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isFirstPage}\n          onClick={(event) => {\n            prevPage(event);\n          }}\n        >\n          «\n        </a>\n      </li>\n\n      {pagesArray.map(page => {\n        return (\n          <li\n            className={cn('page-item', {\n              active: currentPage === page,\n            })}\n            key={page}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`${page}`}\n              onClick={(event) => {\n                handleClick(event, page);\n              }}\n            >\n              {page}\n            </a>\n          </li>\n\n        );\n      })}\n      <li className={cn('page-item', {\n        disabled: isLastPage,\n      })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isLastPage}\n          onClick={(event) => {\n            nextPage(event);\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nconst numberOfItems = 42;\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const maxPerPage = currentPage * itemsPerPage > numberOfItems\n    ? numberOfItems\n    : (currentPage * itemsPerPage);\n  const firstItem = maxPerPage\n  - (maxPerPage - ((currentPage - 1) * itemsPerPage));\n  const itemToShow = items.slice(firstItem, maxPerPage);\n  const handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setItemsPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItem + 1} - ${maxPerPage} of ${numberOfItems})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            defaultValue={itemsPerPage}\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={handleSelect}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={numberOfItems}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n\n      <ul>\n        {itemToShow.map(item => (\n          <li data-cy=\"item\" key={item}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}